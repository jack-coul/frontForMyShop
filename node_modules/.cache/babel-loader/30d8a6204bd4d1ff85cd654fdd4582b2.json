{"ast":null,"code":"const initialState = {\n  error: null,\n  cash: 0,\n  login: \"\",\n  token: \"\",\n  role: \"\",\n  message: \"\"\n};\n\nconst application = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"application/signup/pending\":\n      return { ...state,\n        signing: true,\n        error: null\n      };\n\n    case \"application/signup/fulfilled\":\n      return { ...state,\n        signing: false,\n        message: \"вы успешно зарегистрированы\",\n        role: action.payload\n      };\n\n    case \"application/signup/rejected\":\n      return { ...state,\n        signing: false,\n        error: action.error\n      };\n\n    case \"application/signin/pending\":\n      return { ...state,\n        signing: true,\n        error: null\n      };\n\n    case \"application/signin/fulfilled\":\n      console.log(action.payload.cash);\n      return { ...state,\n        login: action.payload.login,\n        cash: action.payload.cash,\n        signing: false,\n        token: action.payload.token,\n        role: action.payload.role,\n        message: `Вы вошли как ${action.payload.login}`\n      };\n\n    case \"application/signin/rejected\":\n      return { ...state,\n        signing: false,\n        error: action.error\n      };\n\n    case \"application/signout/pending\":\n      return { ...state,\n        signing: true,\n        error: null\n      };\n\n    case \"application/signout/fulfilled\":\n      return { ...state,\n        signing: false,\n        token: null,\n        role: null,\n        message: \"Войдите или зарегистрируйтесь\"\n      };\n\n    case \"application/signout/rejected\":\n      return { ...state,\n        signing: false,\n        error: action.error\n      };\n\n    case \"cash/user/pending\":\n      return { ...state,\n        cashing: true,\n        error: null\n      };\n\n    case \"cash/user/fulfilled\":\n      return { ...state,\n        cash: action.payload.resultCash,\n        cashing: false,\n        messageCash: `Кошелек успешно пополнен на ${action.payload.sumCash}`\n      };\n\n    case \"cash/user/rejected\":\n      return { ...state,\n        cashing: false,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const signUpFetch = (login, password) => {\n  return async dispatch => {\n    dispatch({\n      type: \"application/signup/pending\"\n    });\n\n    try {\n      await fetch(\"http://localhost:4000/createUser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          login,\n          password\n        })\n      });\n      dispatch({\n        type: \"application/signup/fulfilled\"\n      });\n    } catch (error) {\n      dispatch({\n        type: \"application/signup/rejected\",\n        error: error.toString()\n      });\n    }\n  };\n};\nexport const signInFetch = (login, password) => {\n  return async dispatch => {\n    dispatch({\n      type: \"application/signin/pending\"\n    });\n\n    try {\n      const res = await fetch(\"http://localhost:4000/loginUser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          login,\n          password\n        })\n      });\n      const userData = await res.json();\n      let role;\n      console.log(userData);\n\n      if (userData.error) {\n        dispatch({\n          type: \"application/signin/rejected\",\n          error: userData.error\n        });\n      } else {\n        if (login === \"admin\") {\n          role = login;\n        } else {\n          role = \"user\";\n        }\n      }\n\n      dispatch({\n        type: \"application/signin/fulfilled\",\n        payload: {\n          login,\n          token: userData.token,\n          role,\n          cash: userData.cash\n        }\n      });\n      localStorage.setItem(\"token\", userData.token);\n    } catch (error) {\n      dispatch({\n        type: \"application/signin/rejected\",\n        error: error.toString()\n      });\n    }\n  };\n};\nexport const addCashIn = (login, sumCash) => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    dispatch({\n      type: \"cash/user/pending\"\n    });\n\n    try {\n      const res = await fetch(`http://localhost:4000/cashIn`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`\n        },\n        body: JSON.stringify({\n          login,\n          cash: sumCash\n        })\n      });\n      const resultCash = await res.json();\n      console.log(resultCash);\n      dispatch({\n        type: \"cash/user/fulfilled\",\n        payload: {\n          resultCash,\n          sumCash\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: \"cash/user/rejected\",\n        error: error\n      });\n    }\n  };\n};\nexport const signOut = () => {\n  return async dispatch => {\n    dispatch({\n      type: \"application/signout/pending\"\n    });\n\n    try {\n      dispatch({\n        type: \"application/signout/fulfilled\"\n      });\n      localStorage.removeItem(\"role\");\n      localStorage.removeItem(\"token\");\n    } catch (error) {\n      dispatch({\n        type: \"application/signout/rejected\"\n      });\n    }\n  };\n};\nexport default application;","map":{"version":3,"sources":["/Users/islam/intocode/newProductSait/frontForProductSait/my-app/src/redux/features/application.js"],"names":["initialState","error","cash","login","token","role","message","application","state","action","type","signing","payload","console","log","cashing","resultCash","messageCash","sumCash","signUpFetch","password","dispatch","fetch","method","headers","body","JSON","stringify","toString","signInFetch","res","userData","json","localStorage","setItem","addCashIn","getState","Authorization","signOut","removeItem"],"mappings":"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","sourcesContent":["const initialState = {\n  error: null,\n  cash: 0,\n  login: \"\",\n  token: \"\",\n  role: \"\",\n  message: \"\",\n};\n\nconst application = (state = initialState, action) => {\n  switch (action.type) {\n    case \"application/signup/pending\":\n      return {\n        ...state,\n        signing: true,\n        error: null,\n      };\n\n    case \"application/signup/fulfilled\":\n      return {\n        ...state,\n        signing: false,\n        message: \"вы успешно зарегистрированы\",\n        role: action.payload,\n      };\n    case \"application/signup/rejected\":\n      return {\n        ...state,\n        signing: false,\n        error: action.error,\n      };\n    case \"application/signin/pending\":\n      return {\n        ...state,\n        signing: true,\n        error: null,\n      };\n    case \"application/signin/fulfilled\":\n      console.log(action.payload.cash);\n      return {\n        ...state,\n        login: action.payload.login,\n        cash: action.payload.cash,\n        signing: false,\n        token: action.payload.token,\n        role: action.payload.role,\n        message: `Вы вошли как ${action.payload.login}`,\n      };\n    case \"application/signin/rejected\":\n      return {\n        ...state,\n        signing: false,\n        error: action.error,\n      };\n    case \"application/signout/pending\":\n      return {\n        ...state,\n        signing: true,\n        error: null,\n      };\n    case \"application/signout/fulfilled\":\n      return {\n        ...state,\n        signing: false,\n        token: null,\n        role: null,\n        message: \"Войдите или зарегистрируйтесь\",\n      };\n    case \"application/signout/rejected\":\n      return {\n        ...state,\n        signing: false,\n        error: action.error,\n      };\n    case \"cash/user/pending\":\n      return {\n        ...state,\n        cashing: true,\n        error: null,\n      };\n    case \"cash/user/fulfilled\":\n      return {\n        ...state,\n        cash: action.payload.resultCash,\n        cashing: false,\n        messageCash: `Кошелек успешно пополнен на ${action.payload.sumCash}`,\n      };\n    case \"cash/user/rejected\":\n      return {\n        ...state,\n        cashing: false,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const signUpFetch = (login, password) => {\n  return async (dispatch) => {\n    dispatch({ type: \"application/signup/pending\" });\n    try {\n      await fetch(\"http://localhost:4000/createUser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify({ login, password }),\n      });\n      dispatch({\n        type: \"application/signup/fulfilled\",\n      });\n    } catch (error) {\n      dispatch({\n        type: \"application/signup/rejected\",\n        error: error.toString(),\n      });\n    }\n  };\n};\n\nexport const signInFetch = (login, password) => {\n  return async (dispatch) => {\n    dispatch({ type: \"application/signin/pending\" });\n    try {\n      const res = await fetch(\"http://localhost:4000/loginUser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify({ login, password }),\n      });\n      const userData = await res.json();\n      let role;\n      console.log(userData);\n      if (userData.error) {\n        dispatch({\n          type: \"application/signin/rejected\",\n          error: userData.error,\n        });\n      } else {\n        if (login === \"admin\") {\n          role = login;\n        } else {\n          role = \"user\";\n        }\n      }\n      dispatch({\n        type: \"application/signin/fulfilled\",\n        payload: {\n          login,\n          token: userData.token,\n          role,\n          cash: userData.cash,\n        },\n      });\n\n      localStorage.setItem(\"token\", userData.token);\n    } catch (error) {\n      dispatch({\n        type: \"application/signin/rejected\",\n        error: error.toString(),\n      });\n    }\n  };\n};\nexport const addCashIn = (login, sumCash) => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    dispatch({ type: \"cash/user/pending\" });\n    try {\n      const res = await fetch(`http://localhost:4000/cashIn`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`,\n        },\n        body: JSON.stringify({ login, cash: sumCash }),\n      });\n      const resultCash = await res.json();\n      console.log(resultCash);\n      dispatch({\n        type: \"cash/user/fulfilled\",\n        payload: {\n          resultCash,\n          sumCash,\n        },\n      });\n    } catch (error) {\n      dispatch({ type: \"cash/user/rejected\", error: error });\n    }\n  };\n};\n\nexport const signOut = () => {\n  return async (dispatch) => {\n    dispatch({ type: \"application/signout/pending\" });\n    try {\n      dispatch({ type: \"application/signout/fulfilled\" });\n      localStorage.removeItem(\"role\");\n      localStorage.removeItem(\"token\");\n    } catch (error) {\n      dispatch({ type: \"application/signout/rejected\" });\n    }\n  };\n};\n\nexport default application;\n"]},"metadata":{},"sourceType":"module"}