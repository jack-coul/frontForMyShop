{"ast":null,"code":"const initialState = {\n  error: null,\n  login: null,\n  token: localStorage.getItem(\"token\"),\n  role: localStorage.getItem(\"role\"),\n  message: localStorage.getItem(\"message\")\n};\n\nconst application = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"application/signup/pending\":\n      return { ...state,\n        signing: true,\n        error: null\n      };\n\n    case \"application/signup/fulfilled\":\n      return { ...state,\n        signing: false,\n        message: \"вы успешно зарегистрированы\",\n        role: action.payload\n      };\n\n    case \"application/signup/rejected\":\n      return { ...state,\n        signing: false,\n        error: action.error\n      };\n\n    case \"application/signin/pending\":\n      return { ...state,\n        signing: true,\n        error: null\n      };\n\n    case \"application/signin/fulfilled\":\n      return { ...state,\n        signing: false,\n        token: action.payload.token,\n        role: action.payload.role,\n        message: `Вы вошли как ${action.payload.login}`\n      };\n\n    case \"application/signin/rejected\":\n      return { ...state,\n        signing: false,\n        error: action.error\n      };\n\n    case \"application/signout/pending\":\n      return { ...state,\n        signing: true,\n        error: null\n      };\n\n    case \"application/signout/fulfilled\":\n      return { ...state,\n        signing: false,\n        token: null,\n        role: null,\n        message: \"Войдите или зарегистрируйтесь\"\n      };\n\n    case \"application/signout/rejected\":\n      return { ...state,\n        signing: false,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const signUpFetch = (login, password) => {\n  return async dispatch => {\n    dispatch({\n      type: \"application/signup/pending\"\n    });\n\n    try {\n      await fetch(\"http://localhost:4000/createUser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          login,\n          password\n        })\n      });\n      dispatch({\n        type: \"application/signup/fulfilled\"\n      });\n    } catch (error) {\n      dispatch({\n        type: \"application/signup/rejected\",\n        error: error.toString()\n      });\n    }\n  };\n};\nexport const signInFetch = (login, password) => {\n  return async dispatch => {\n    dispatch({\n      type: \"application/signin/pending\"\n    });\n\n    try {\n      const res = await fetch(\"http://localhost:4000/loginUser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          login,\n          password\n        })\n      });\n      const token = await res.json();\n      let role;\n\n      if (token.error) {\n        dispatch({\n          type: \"application/signin/rejected\",\n          error: token.error\n        });\n      } else {\n        if (login === \"admin\") {\n          role = login;\n        } else {\n          role = \"user\";\n        }\n      }\n\n      dispatch({\n        type: \"application/signin/fulfilled\",\n        payload: {\n          login,\n          token: token.token,\n          role\n        }\n      });\n      localStorage.setItem(\"token\", token.token);\n      localStorage.setItem(\"role\", role);\n      localStorage.setItem(\"message\", `Вы вошли как ${login}`);\n    } catch (error) {\n      dispatch({\n        type: \"application/signin/rejected\",\n        error: error.toString()\n      });\n    }\n  };\n};\nexport const signOut = () => {\n  return async dispatch => {\n    dispatch({\n      type: \"application/signout/pending\"\n    });\n\n    try {\n      dispatch({\n        type: \"application/signout/fulfilled\"\n      });\n      localStorage.removeItem(\"role\");\n      localStorage.removeItem(\"token\");\n    } catch (error) {\n      dispatch({\n        type: \"application/signout/rejected\"\n      });\n    }\n  };\n};\nexport default application;","map":{"version":3,"sources":["/Users/islam/intocode/newProductSait/frontForProductSait/my-app/src/redux/features/application.js"],"names":["initialState","error","login","token","localStorage","getItem","role","message","application","state","action","type","signing","payload","signUpFetch","password","dispatch","fetch","method","headers","body","JSON","stringify","toString","signInFetch","res","json","setItem","signOut","removeItem"],"mappings":"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","sourcesContent":["const initialState = {\n  error: null,\n  login: null,\n  token: localStorage.getItem(\"token\"),\n  role: localStorage.getItem(\"role\"),\n  message: localStorage.getItem(\"message\"),\n};\n\nconst application = (state = initialState, action) => {\n  switch (action.type) {\n    case \"application/signup/pending\":\n      return {\n        ...state,\n        signing: true,\n        error: null,\n      };\n\n    case \"application/signup/fulfilled\":\n      return {\n        ...state,\n        signing: false,\n        message: \"вы успешно зарегистрированы\",\n        role: action.payload,\n      };\n    case \"application/signup/rejected\":\n      return {\n        ...state,\n        signing: false,\n        error: action.error,\n      };\n    case \"application/signin/pending\":\n      return {\n        ...state,\n        signing: true,\n        error: null,\n      };\n    case \"application/signin/fulfilled\":\n      return {\n        ...state,\n        signing: false,\n        token: action.payload.token,\n        role: action.payload.role,\n        message: `Вы вошли как ${action.payload.login}`,\n      };\n    case \"application/signin/rejected\":\n      return {\n        ...state,\n        signing: false,\n        error: action.error,\n      };\n    case \"application/signout/pending\":\n      return {\n        ...state,\n        signing: true,\n        error: null,\n      };\n    case \"application/signout/fulfilled\":\n      return {\n        ...state,\n        signing: false,\n        token: null,\n        role: null,\n        message: \"Войдите или зарегистрируйтесь\",\n      };\n    case \"application/signout/rejected\":\n      return {\n        ...state,\n        signing: false,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const signUpFetch = (login, password) => {\n  return async (dispatch) => {\n    dispatch({ type: \"application/signup/pending\" });\n    try {\n      await fetch(\"http://localhost:4000/createUser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify({ login, password }),\n      });\n      dispatch({\n        type: \"application/signup/fulfilled\",\n      });\n    } catch (error) {\n      dispatch({\n        type: \"application/signup/rejected\",\n        error: error.toString(),\n      });\n    }\n  };\n};\n\nexport const signInFetch = (login, password) => {\n  return async (dispatch) => {\n    dispatch({ type: \"application/signin/pending\" });\n    try {\n      const res = await fetch(\"http://localhost:4000/loginUser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify({ login, password }),\n      });\n      const token = await res.json();\n      let role;\n      if (token.error) {\n        dispatch({\n          type: \"application/signin/rejected\",\n          error: token.error,\n        });\n      } else {\n        if (login === \"admin\") {\n          role = login;\n        } else {\n          role = \"user\";\n        }\n      }\n      dispatch({\n        type: \"application/signin/fulfilled\",\n        payload: {\n          login,\n          token: token.token,\n          role,\n        },\n      });\n\n      localStorage.setItem(\"token\", token.token);\n      localStorage.setItem(\"role\", role);\n      localStorage.setItem(\"message\", `Вы вошли как ${login}`);\n    } catch (error) {\n      dispatch({\n        type: \"application/signin/rejected\",\n        error: error.toString(),\n      });\n    }\n  };\n};\n\nexport const signOut = () => {\n  return async (dispatch) => {\n    dispatch({ type: \"application/signout/pending\" });\n    try {\n      dispatch({ type: \"application/signout/fulfilled\" });\n      localStorage.removeItem(\"role\");\n      localStorage.removeItem(\"token\");\n    } catch (error) {\n      dispatch({ type: \"application/signout/rejected\" });\n    }\n  };\n};\n\nexport default application;\n"]},"metadata":{},"sourceType":"module"}