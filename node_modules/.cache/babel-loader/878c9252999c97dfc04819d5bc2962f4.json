{"ast":null,"code":"const inittialState = {\n  basket: [// { id, left, amount },\n    // { id, left, amount },\n  ],\n  product: [],\n  error: null\n};\n\nconst basket = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : inittialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"get/basket/pending\":\n      return { ...state,\n        geting: true,\n        error: null\n      };\n\n    case \"get/basket/fulfilled\":\n      return { ...state,\n        geting: false,\n        basket: [...action.payload.basket.products.map(product => product)]\n      };\n\n    case \"get/basket/rejected\":\n      return { ...state,\n        geting: false,\n        error: action.error\n      };\n\n    case \"addproduct/inbasket/pending\":\n      return { ...state,\n        adding: true,\n        error: null\n      };\n\n    case \"addproduct/inbasket/fulfilled\":\n      const id = action.payload.productinBasket._id;\n      const left = action.payload.productinBasket.left--;\n      return { ...state,\n        adding: false,\n        basket: [...state.basket, {\n          id,\n          left,\n          amount: 1\n        }]\n      };\n\n    case \"addproduct/inbasket/rejected\":\n      return { ...state,\n        adding: false,\n        error: action.error\n      };\n\n    case \"deleteproduct/frombasket/pending\":\n      return { ...state,\n        deleting: true,\n        error: null\n      };\n\n    case \"deleteproduct/inbasket/fulfilled\":\n      return { ...state,\n        deleting: false,\n        basket: [...state.basket.filter(product => product.id !== action.payload)]\n      };\n\n    case \"deleteproduct/inbasket/rejected\":\n      return { ...state,\n        deleting: false,\n        error: action.error\n      };\n\n    case \"addamount/productinbasket/pending\":\n      return { ...state,\n        addingAmout: true,\n        error: null\n      };\n\n    case \"addamount/productinbasket/fulfilled\":\n      return { ...state,\n        addingAmout: false,\n        basket: [...state.basket.map(product => {\n          if (product.id === action.payload) {\n            product.left -= 1;\n            product.amount += 1;\n            console.log(product);\n          }\n\n          return product;\n        })]\n      };\n\n    case \"addamount/productinbasket/rejected\":\n      return { ...state,\n        addingAmout: false,\n        error: action.error\n      };\n\n    case \"removeamount/productinbasket/pending\":\n      return { ...state,\n        removeAmout: true,\n        error: null\n      };\n\n    case \"removeamount/productinbasket/fulfilled\":\n      return { ...state,\n        removeAmout: false,\n        basket: [...state.basket.map(product => {\n          if (product.id === action.payload) {\n            product.left += 1;\n            product.amount -= 1;\n          }\n\n          return product;\n        })]\n      };\n\n    case \"removeamount/productinbasket/rejected\":\n      return { ...state,\n        removeAmout: false,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const getAllProductsInBasket = () => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    dispatch({\n      type: \"get/basket/pending\"\n    });\n\n    try {\n      const res = await fetch(\"http://localhost:4000/basket\", {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`\n        }\n      });\n      const basket = await res.json();\n      dispatch({\n        type: \"get/basket/fulfilled\",\n        payload: {\n          basket,\n          products: state.products.products\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: \"get/basket/rejected\",\n        error: error\n      });\n    }\n  };\n};\nexport const addProductInBasket = id => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: \"addproduct/inbasket/pending\"\n    });\n    const state = getState();\n    const productLeft = state.products.products;\n\n    try {\n      const res = await fetch(`http://localhost:4000/addproductinbasket/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`\n        }\n      });\n      const productinBasket = await res.json();\n      dispatch({\n        type: \"addproduct/inbasket/fulfilled\",\n        payload: {\n          productinBasket,\n          productLeft,\n          id\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: \"addproduct/inbasket/rejected\",\n        error: error\n      });\n    }\n  };\n};\nexport const deleteProductFromBasket = id => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: \"deleteproduct/frombasket/pending\"\n    });\n    const state = getState();\n\n    try {\n      await fetch(`http://localhost:4000/deleteProductFromBasket/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`\n        }\n      });\n      dispatch({\n        type: \"deleteproduct/inbasket/fulfilled\",\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: \"deleteproduct/inbasket/rejected\",\n        error: error\n      });\n    }\n  };\n};\nexport const addAmountProductinBasket = id => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    dispatch({\n      type: \"addamount/productinbasket/pending\"\n    });\n\n    try {\n      await fetch(`http://localhost:4000/addAmountProductinBasket/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`\n        }\n      });\n      dispatch({\n        type: \"addamount/productinbasket/fulfilled\",\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: \"addamount/productinbasket/rejected\",\n        error: error\n      });\n    }\n  };\n};\nexport const removeAmountProductinBasket = id => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    dispatch({\n      type: \"removeamount/productinbasket/pending\"\n    });\n\n    try {\n      await fetch(`http://localhost:4000/removeAmountProductinBasket/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`\n        }\n      });\n      dispatch({\n        type: \"removeamount/productinbasket/fulfilled\",\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: \"removeamount/productinbasket/rejected\",\n        error: error\n      });\n    }\n  };\n};\nexport default basket;","map":{"version":3,"sources":["/Users/islam/intocode/newProductSait/frontForProductSait/my-app/src/redux/features/basket.js"],"names":["inittialState","basket","product","error","state","action","type","geting","payload","products","map","adding","id","productinBasket","_id","left","amount","deleting","filter","addingAmout","console","log","removeAmout","getAllProductsInBasket","dispatch","getState","res","fetch","headers","Authorization","application","token","json","addProductInBasket","productLeft","method","deleteProductFromBasket","addAmountProductinBasket","removeAmountProductinBasket"],"mappings":"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","sourcesContent":["const inittialState = {\n  basket: [\n    // { id, left, amount },\n    // { id, left, amount },\n  ],\n  product: [],\n  error: null,\n};\n\nconst basket = (state = inittialState, action) => {\n  switch (action.type) {\n    case \"get/basket/pending\":\n      return {\n        ...state,\n        geting: true,\n        error: null,\n      };\n    case \"get/basket/fulfilled\":\n      return {\n        ...state,\n        geting: false,\n        basket: [...action.payload.basket.products.map((product) => product)],\n      };\n    case \"get/basket/rejected\":\n      return {\n        ...state,\n        geting: false,\n        error: action.error,\n      };\n    case \"addproduct/inbasket/pending\":\n      return {\n        ...state,\n        adding: true,\n        error: null,\n      };\n    case \"addproduct/inbasket/fulfilled\":\n      const id = action.payload.productinBasket._id;\n      const left = action.payload.productinBasket.left--;\n\n      return {\n        ...state,\n        adding: false,\n        basket: [...state.basket, { id, left, amount: 1 }],\n      };\n    case \"addproduct/inbasket/rejected\":\n      return {\n        ...state,\n        adding: false,\n        error: action.error,\n      };\n    case \"deleteproduct/frombasket/pending\":\n      return {\n        ...state,\n        deleting: true,\n        error: null,\n      };\n    case \"deleteproduct/inbasket/fulfilled\":\n      return {\n        ...state,\n        deleting: false,\n        basket: [\n          ...state.basket.filter((product) => product.id !== action.payload),\n        ],\n      };\n    case \"deleteproduct/inbasket/rejected\":\n      return {\n        ...state,\n        deleting: false,\n        error: action.error,\n      };\n    case \"addamount/productinbasket/pending\":\n      return {\n        ...state,\n        addingAmout: true,\n        error: null,\n      };\n    case \"addamount/productinbasket/fulfilled\":\n      return {\n        ...state,\n        addingAmout: false,\n        basket: [\n          ...state.basket.map((product) => {\n            if (product.id === action.payload) {\n              product.left -= 1;\n              product.amount += 1;\n              console.log(product);\n            }\n            return product;\n          }),\n        ],\n      };\n    case \"addamount/productinbasket/rejected\":\n      return {\n        ...state,\n        addingAmout: false,\n        error: action.error,\n      };\n    case \"removeamount/productinbasket/pending\":\n      return {\n        ...state,\n        removeAmout: true,\n        error: null,\n      };\n    case \"removeamount/productinbasket/fulfilled\":\n      return {\n        ...state,\n        removeAmout: false,\n        basket: [\n          ...state.basket.map((product) => {\n            if (product.id === action.payload) {\n              product.left += 1;\n              product.amount -= 1;\n            }\n            return product;\n          }),\n        ],\n      };\n    case \"removeamount/productinbasket/rejected\":\n      return {\n        ...state,\n        removeAmout: false,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const getAllProductsInBasket = () => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    dispatch({ type: \"get/basket/pending\" });\n    try {\n      const res = await fetch(\"http://localhost:4000/basket\", {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`,\n        },\n      });\n      const basket = await res.json();\n      dispatch({\n        type: \"get/basket/fulfilled\",\n        payload: {\n          basket,\n          products: state.products.products,\n        },\n      });\n    } catch (error) {\n      dispatch({ type: \"get/basket/rejected\", error: error });\n    }\n  };\n};\n\nexport const addProductInBasket = (id) => {\n  return async (dispatch, getState) => {\n    dispatch({ type: \"addproduct/inbasket/pending\" });\n    const state = getState();\n    const productLeft = state.products.products;\n    try {\n      const res = await fetch(\n        `http://localhost:4000/addproductinbasket/${id}`,\n        {\n          method: \"PATCH\",\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${state.application.token}`,\n          },\n        }\n      );\n      const productinBasket = await res.json();\n      dispatch({\n        type: \"addproduct/inbasket/fulfilled\",\n        payload: {\n          productinBasket,\n          productLeft,\n          id,\n        },\n      });\n    } catch (error) {\n      dispatch({ type: \"addproduct/inbasket/rejected\", error: error });\n    }\n  };\n};\n\nexport const deleteProductFromBasket = (id) => {\n  return async (dispatch, getState) => {\n    dispatch({ type: \"deleteproduct/frombasket/pending\" });\n    const state = getState();\n    try {\n      await fetch(`http://localhost:4000/deleteProductFromBasket/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`,\n        },\n      });\n      dispatch({ type: \"deleteproduct/inbasket/fulfilled\", payload: id });\n    } catch (error) {\n      dispatch({ type: \"deleteproduct/inbasket/rejected\", error: error });\n    }\n  };\n};\n\nexport const addAmountProductinBasket = (id) => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    dispatch({ type: \"addamount/productinbasket/pending\" });\n    try {\n      await fetch(`http://localhost:4000/addAmountProductinBasket/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`,\n        },\n      });\n\n      dispatch({\n        type: \"addamount/productinbasket/fulfilled\",\n        payload: id,\n      });\n    } catch (error) {\n      dispatch({ type: \"addamount/productinbasket/rejected\", error: error });\n    }\n  };\n};\n\nexport const removeAmountProductinBasket = (id) => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    dispatch({ type: \"removeamount/productinbasket/pending\" });\n    try {\n      await fetch(`http://localhost:4000/removeAmountProductinBasket/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`,\n        },\n      });\n      dispatch({ type: \"removeamount/productinbasket/fulfilled\", payload: id });\n    } catch (error) {\n      dispatch({ type: \"removeamount/productinbasket/rejected\", error: error });\n    }\n  };\n};\n\nexport default basket;\n"]},"metadata":{},"sourceType":"module"}