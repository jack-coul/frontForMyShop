{"ast":null,"code":"const initialState = {\n  cash: \"\",\n  cashing: false,\n  error: null\n};\n\nconst user = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"get/user/pending\":\n      return { ...state,\n        cashing: true,\n        error: null\n      };\n\n    case \"get/user/fulfilled\":\n      console.log(action.payload.user.cash);\n      return { ...state,\n        cash: \"action.payload.user.cash,\",\n        cashing: false\n      };\n\n    case \"get/user/rejected\":\n      console.log(23);\n      return { ...state,\n        cashing: false,\n        error: action.error\n      };\n\n    case \"cash/user/pending\":\n      return { ...state,\n        cashing: true,\n        error: null\n      };\n\n    case \"cash/user/fulfilled\":\n      return { ...state,\n        cash: action.payload.resultCash,\n        cashing: false,\n        message: `Кошелек успешно пополнен на ${action.payload.sumCash}`\n      };\n\n    case \"cash/user/rejected\":\n      return { ...state,\n        cashing: false,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const getUser = login => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    dispatch({\n      type: \"get/user/pending\"\n    });\n    console.log(login);\n\n    try {\n      const res = await fetch(`http://localhost:4000/oneUser`, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`\n        },\n        body: JSON.stringify({\n          login\n        })\n      });\n      const user = await res.json();\n      console.log(user);\n      dispatch({\n        type: \"get/user/fulfilled\",\n        payload: user\n      });\n    } catch (error) {\n      dispatch({\n        type: \"get/user/rejected\",\n        error: error.toString()\n      });\n    }\n  };\n};\nexport const addCashIn = (login, sumCash) => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    dispatch({\n      type: \"cash/user/pending\"\n    });\n\n    try {\n      const res = await fetch(`http://localhost:4000/cashIn`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`\n        },\n        body: JSON.stringify({\n          login,\n          cash: sumCash\n        })\n      });\n      const resultCash = await res.json();\n      console.log(resultCash);\n      dispatch({\n        type: \"cash/user/fulfilled\",\n        payload: {\n          resultCash,\n          sumCash\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: \"cash/user/rejected\",\n        error: error\n      });\n    }\n  };\n};\nexport default user;","map":{"version":3,"sources":["/Users/islam/intocode/newProductSait/frontForProductSait/my-app/src/redux/features/user.js"],"names":["initialState","cash","cashing","error","user","state","action","type","console","log","payload","resultCash","message","sumCash","getUser","login","dispatch","getState","res","fetch","method","headers","Authorization","application","token","body","JSON","stringify","json","toString","addCashIn"],"mappings":"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","sourcesContent":["const initialState = {\n  cash: \"\",\n  cashing: false,\n  error: null,\n};\n\nconst user = (state = initialState, action) => {\n  switch (action.type) {\n    case \"get/user/pending\":\n      return {\n        ...state,\n        cashing: true,\n        error: null,\n      };\n    case \"get/user/fulfilled\":\n      console.log(action.payload.user.cash);\n      return {\n        ...state,\n        cash: \"action.payload.user.cash,\",\n        cashing: false,\n      };\n    case \"get/user/rejected\":\n      console.log(23);\n      return {\n        ...state,\n        cashing: false,\n        error: action.error,\n      };\n    case \"cash/user/pending\":\n      return {\n        ...state,\n        cashing: true,\n        error: null,\n      };\n    case \"cash/user/fulfilled\":\n      return {\n        ...state,\n        cash: action.payload.resultCash,\n        cashing: false,\n        message: `Кошелек успешно пополнен на ${action.payload.sumCash}`,\n      };\n    case \"cash/user/rejected\":\n      return {\n        ...state,\n        cashing: false,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const getUser = (login) => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    dispatch({ type: \"get/user/pending\" });\n    console.log(login);\n    try {\n      const res = await fetch(`http://localhost:4000/oneUser`, {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`,\n        },\n        body: JSON.stringify({ login }),\n      });\n      const user = await res.json();\n      console.log(user);\n      dispatch({\n        type: \"get/user/fulfilled\",\n        payload: user,\n      });\n    } catch (error) {\n      dispatch({ type: \"get/user/rejected\", error: error.toString() });\n    }\n  };\n};\n\nexport const addCashIn = (login, sumCash) => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    dispatch({ type: \"cash/user/pending\" });\n    try {\n      const res = await fetch(`http://localhost:4000/cashIn`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`,\n        },\n        body: JSON.stringify({ login, cash: sumCash }),\n      });\n      const resultCash = await res.json();\n      console.log(resultCash);\n      dispatch({\n        type: \"cash/user/fulfilled\",\n        payload: {\n          resultCash,\n          sumCash,\n        },\n      });\n    } catch (error) {\n      dispatch({ type: \"cash/user/rejected\", error: error });\n    }\n  };\n};\n\nexport default user;\n"]},"metadata":{},"sourceType":"module"}