{"ast":null,"code":"const initialState = {\n  category: [],\n  error: null\n};\n\nconst category = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"category/get/painding\":\n      return { ...state,\n        loadCategory: true,\n        error: null\n      };\n\n    case \"category/get/fulfilled\":\n      return { ...state,\n        loadCategory: false,\n        category: [...action.payload]\n      };\n\n    case \"categoty/get/rejected\":\n      return {\n        loadCategory: false,\n        error: action.error\n      };\n\n    case \"category/add/painding\":\n      return { ...state,\n        loadCategory: true,\n        error: null\n      };\n\n    case \"category/add/fulfilled\":\n      return { ...state,\n        loadCategory: false,\n        category: [...state.category, action.payload]\n      };\n\n    case \"categoty/add/rejected\":\n      return {\n        loadCategory: false,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const getCategory = () => {\n  return async dispatch => {\n    dispatch({\n      type: \"category/get/painding\"\n    });\n\n    try {\n      const res = await fetch(\"http://localhost:4000/category\");\n      const category = await res.json();\n      dispatch({\n        type: \"category/get/fulfilled\",\n        payload: category\n      });\n    } catch (error) {\n      dispatch({\n        type: \"category/get/rejected\",\n        error: error.toString()\n      });\n    }\n  };\n};\nexport const addCategory = name => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    dispatch({\n      type: \"category/add/painding\"\n    });\n\n    try {\n      const res = await fetch(\"http://localhost:4000/category\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: state.application.token\n        },\n        body: JSON.stringify({\n          name\n        })\n      });\n      const category = await res.json();\n      dispatch({\n        type: \"category/add/fulfilled\",\n        payload: category\n      });\n    } catch (error) {\n      dispatch({\n        type: \"category/add/rejected\",\n        error: error.toString()\n      });\n    }\n  };\n};\nexport const editCategory = (id, name) => {\n  return async dispatch => {\n    dispatch({\n      type: \"category/edit/painding\"\n    });\n\n    try {\n      await fetch(`http://localhost:4000/category/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          name\n        })\n      });\n      dispatch({\n        type: \"category/edit/fulfilled\",\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: \"category/edit/rejected\",\n        error: error.toString()\n      });\n    }\n  };\n};\nexport const deleteCategory = id => {\n  return async dispatch => {\n    dispatch({\n      type: \"category/delete/painding\"\n    });\n\n    try {\n      await fetch(\"http://localhost:4000/category\");\n      dispatch({\n        type: \"category/delete/fulfilled\",\n        payload: category\n      });\n    } catch (error) {\n      dispatch({\n        type: \"category/delete/rejected\",\n        error: error.toString()\n      });\n    }\n  };\n};\nexport default category;","map":{"version":3,"sources":["/Users/islam/intocode/newProductSait/frontForProductSait/my-app/src/redux/features/category.js"],"names":["initialState","category","error","state","action","type","loadCategory","payload","getCategory","dispatch","res","fetch","json","toString","addCategory","name","getState","method","headers","Authorization","application","token","body","JSON","stringify","editCategory","id","deleteCategory"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;;AAKA,MAAMD,QAAQ,GAAG,YAAkC;AAAA,MAAjCE,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,uBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELG,QAAAA,YAAY,EAAE,IAFT;AAGLJ,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAK,wBAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELG,QAAAA,YAAY,EAAE,KAFT;AAGLL,QAAAA,QAAQ,EAAE,CAAC,GAAGG,MAAM,CAACG,OAAX;AAHL,OAAP;;AAKF,SAAK,uBAAL;AACE,aAAO;AACLD,QAAAA,YAAY,EAAE,KADT;AAELJ,QAAAA,KAAK,EAAEE,MAAM,CAACF;AAFT,OAAP;;AAIF,SAAK,uBAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELG,QAAAA,YAAY,EAAE,IAFT;AAGLJ,QAAAA,KAAK,EAAE;AAHF,OAAP;;AAKF,SAAK,wBAAL;AACE,aAAO,EACL,GAAGC,KADE;AAELG,QAAAA,YAAY,EAAE,KAFT;AAGLL,QAAAA,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAV,EAAoBG,MAAM,CAACG,OAA3B;AAHL,OAAP;;AAKF,SAAK,uBAAL;AACE,aAAO;AACLD,QAAAA,YAAY,EAAE,KADT;AAELJ,QAAAA,KAAK,EAAEE,MAAM,CAACF;AAFT,OAAP;;AAIF;AACE,aAAOC,KAAP;AApCJ;AAsCD,CAvCD;;AAyCA,OAAO,MAAMK,WAAW,GAAG,MAAM;AAC/B,SAAO,MAAOC,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAD,CAAvB;AACA,YAAMV,QAAQ,GAAG,MAAMS,GAAG,CAACE,IAAJ,EAAvB;AACAH,MAAAA,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAE,wBAAR;AAAkCE,QAAAA,OAAO,EAAEN;AAA3C,OAAD,CAAR;AACD,KAJD,CAIE,OAAOC,KAAP,EAAc;AACdO,MAAAA,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAE,uBAAR;AAAiCH,QAAAA,KAAK,EAAEA,KAAK,CAACW,QAAN;AAAxC,OAAD,CAAR;AACD;AACF,GATD;AAUD,CAXM;AAYP,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU;AACnC,SAAO,OAAON,QAAP,EAAiBO,QAAjB,KAA8B;AACnC,UAAMb,KAAK,GAAGa,QAAQ,EAAtB;AACAP,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAD,EAAmC;AACxDM,QAAAA,MAAM,EAAE,MADgD;AAExDC,QAAAA,OAAO,EAAE;AACP,0BAAgB,kBADT;AAEPC,UAAAA,aAAa,EAAEhB,KAAK,CAACiB,WAAN,CAAkBC;AAF1B,SAF+C;AAMxDC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAET,UAAAA;AAAF,SAAf;AANkD,OAAnC,CAAvB;AAQA,YAAMd,QAAQ,GAAG,MAAMS,GAAG,CAACE,IAAJ,EAAvB;AACAH,MAAAA,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAE,wBAAR;AAAkCE,QAAAA,OAAO,EAAEN;AAA3C,OAAD,CAAR;AACD,KAXD,CAWE,OAAOC,KAAP,EAAc;AACdO,MAAAA,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAE,uBAAR;AAAiCH,QAAAA,KAAK,EAAEA,KAAK,CAACW,QAAN;AAAxC,OAAD,CAAR;AACD;AACF,GAjBD;AAkBD,CAnBM;AAoBP,OAAO,MAAMY,YAAY,GAAG,CAACC,EAAD,EAAKX,IAAL,KAAc;AACxC,SAAO,MAAON,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAMM,KAAK,CAAE,kCAAiCe,EAAG,EAAtC,EAAyC;AAClDT,QAAAA,MAAM,EAAE,OAD0C;AAElDC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFyC;AAKlDI,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAET,UAAAA;AAAF,SAAf;AAL4C,OAAzC,CAAX;AAOAN,MAAAA,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAE,yBAAR;AAAmCE,QAAAA,OAAO,EAAEmB;AAA5C,OAAD,CAAR;AACD,KATD,CASE,OAAOxB,KAAP,EAAc;AACdO,MAAAA,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAE,wBAAR;AAAkCH,QAAAA,KAAK,EAAEA,KAAK,CAACW,QAAN;AAAzC,OAAD,CAAR;AACD;AACF,GAdD;AAeD,CAhBM;AAiBP,OAAO,MAAMc,cAAc,GAAID,EAAD,IAAQ;AACpC,SAAO,MAAOjB,QAAP,IAAoB;AACzBA,IAAAA,QAAQ,CAAC;AAAEJ,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;;AACA,QAAI;AACF,YAAMM,KAAK,CAAC,gCAAD,CAAX;AACAF,MAAAA,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAE,2BAAR;AAAqCE,QAAAA,OAAO,EAAEN;AAA9C,OAAD,CAAR;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdO,MAAAA,QAAQ,CAAC;AAAEJ,QAAAA,IAAI,EAAE,0BAAR;AAAoCH,QAAAA,KAAK,EAAEA,KAAK,CAACW,QAAN;AAA3C,OAAD,CAAR;AACD;AACF,GARD;AASD,CAVM;AAYP,eAAeZ,QAAf","sourcesContent":["const initialState = {\n  category: [],\n  error: null,\n};\n\nconst category = (state = initialState, action) => {\n  switch (action.type) {\n    case \"category/get/painding\":\n      return {\n        ...state,\n        loadCategory: true,\n        error: null,\n      };\n    case \"category/get/fulfilled\":\n      return {\n        ...state,\n        loadCategory: false,\n        category: [...action.payload],\n      };\n    case \"categoty/get/rejected\":\n      return {\n        loadCategory: false,\n        error: action.error,\n      };\n    case \"category/add/painding\":\n      return {\n        ...state,\n        loadCategory: true,\n        error: null,\n      };\n    case \"category/add/fulfilled\":\n      return {\n        ...state,\n        loadCategory: false,\n        category: [...state.category, action.payload],\n      };\n    case \"categoty/add/rejected\":\n      return {\n        loadCategory: false,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const getCategory = () => {\n  return async (dispatch) => {\n    dispatch({ type: \"category/get/painding\" });\n    try {\n      const res = await fetch(\"http://localhost:4000/category\");\n      const category = await res.json();\n      dispatch({ type: \"category/get/fulfilled\", payload: category });\n    } catch (error) {\n      dispatch({ type: \"category/get/rejected\", error: error.toString() });\n    }\n  };\n};\nexport const addCategory = (name) => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    dispatch({ type: \"category/add/painding\" });\n    try {\n      const res = await fetch(\"http://localhost:4000/category\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: state.application.token,\n        },\n        body: JSON.stringify({ name }),\n      });\n      const category = await res.json();\n      dispatch({ type: \"category/add/fulfilled\", payload: category });\n    } catch (error) {\n      dispatch({ type: \"category/add/rejected\", error: error.toString() });\n    }\n  };\n};\nexport const editCategory = (id, name) => {\n  return async (dispatch) => {\n    dispatch({ type: \"category/edit/painding\" });\n    try {\n      await fetch(`http://localhost:4000/category/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify({ name }),\n      });\n      dispatch({ type: \"category/edit/fulfilled\", payload: id });\n    } catch (error) {\n      dispatch({ type: \"category/edit/rejected\", error: error.toString() });\n    }\n  };\n};\nexport const deleteCategory = (id) => {\n  return async (dispatch) => {\n    dispatch({ type: \"category/delete/painding\" });\n    try {\n      await fetch(\"http://localhost:4000/category\");\n      dispatch({ type: \"category/delete/fulfilled\", payload: category });\n    } catch (error) {\n      dispatch({ type: \"category/delete/rejected\", error: error.toString() });\n    }\n  };\n};\n\nexport default category;\n"]},"metadata":{},"sourceType":"module"}