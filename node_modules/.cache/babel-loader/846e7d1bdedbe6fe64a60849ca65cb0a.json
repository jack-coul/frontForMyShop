{"ast":null,"code":"const inittialState = {\n  basket: [// { id, categoryId, amount },\n    // { id, categoryId, amount },\n  ],\n  products: [],\n  error: null\n};\n\nconst basket = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : inittialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"get/basket/pending\":\n      return { ...state,\n        geting: true,\n        error: null\n      };\n\n    case \"get/basket/fulfilled\":\n      return { ...state,\n        geting: false,\n        basket: [...state.basket]\n      };\n\n    case \"get/basket/rejected\":\n      return { ...state,\n        geting: false,\n        error: action.error\n      };\n\n    case \"addproduct/inbasket/pending\":\n      return { ...state,\n        adding: true,\n        error: null\n      };\n\n    case \"addproduct/inbasket/fulfilled\":\n      const id = action.payload.productinBasket._id;\n      const categoryId = action.payload.productinBasket.categoryId;\n      const product = { ...action.payload.productLeft.find(product => product._id === action.payload.id)\n      };\n      product.left--;\n      return { ...state,\n        adding: false,\n        basket: [...state.basket, {\n          id,\n          categoryId,\n          amount: 1\n        }],\n        products: [...state.products, product]\n      };\n\n    case \"addproduct/inbasket/rejected\":\n      return { ...state,\n        adding: false,\n        error: action.error\n      };\n\n    case \"deleteproduct/frombasket/pending\":\n      return { ...state,\n        deleting: true,\n        error: null\n      };\n\n    case \"deleteproduct/inbasket/fulfilled\":\n      return { ...state,\n        deleting: false,\n        basket: [...state.basket.filter(product => product._id !== action.payload)]\n      };\n\n    case \"deleteproduct/inbasket/rejected\":\n      return { ...state,\n        deleting: false,\n        error: action.error\n      };\n\n    case \"addamount/productinbasket/pending\":\n      return { ...state,\n        addingAmout: true,\n        error: null\n      };\n\n    case \"addamount/productinbasket/\":\n      return { ...state,\n        addingAmout: false,\n        basket: [...state.basket.map(product => {\n          if (product.id === action.payload) {\n            product.amount++;\n          }\n\n          return product;\n        })],\n        products: [...state.products.map(product => {\n          if (product._id === action.payload) {\n            product.left--;\n          }\n        })]\n      };\n\n    case \"addamount/productinbasket/rejected\":\n      return { ...state,\n        addingAmout: false,\n        error: action.error\n      };\n\n    case \"removeamount/productinbasket/pending\":\n      return { ...state,\n        removeAmout: true,\n        error: null\n      };\n\n    case \"removeamount/productinbasket/\":\n      return { ...state,\n        removeAmout: false,\n        basket: [...state.basket.map(product => {\n          if (product.id === action.payload) {\n            product.amount--;\n          }\n\n          return product;\n        })],\n        products: [...state.products.map(product => {\n          if (product._id === action.payload) {\n            product.left++;\n          }\n        })]\n      };\n\n    case \"removeamount/productinbasket/rejected\":\n      return { ...state,\n        removeAmout: false,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const getAllProductsInBasket = () => {\n  return async dispatch => {\n    dispatch({\n      type: \"get/basket/pending\"\n    });\n\n    try {\n      const res = await fetch(\"http://localhost:4000/basket\");\n      const basket = await res.json();\n      dispatch({\n        type: \"get/basket/fulfilled\",\n        payload: basket\n      });\n    } catch (error) {\n      dispatch({\n        type: \"get/basket/rejected\",\n        error: error\n      });\n    }\n  };\n};\nexport const addProductInBasket = id => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: \"addproduct/inbasket/pending\"\n    });\n    const state = getState();\n    const productLeft = state.products.products;\n\n    try {\n      const res = await fetch(`http://localhost:4000/addproductinbasket/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`\n        }\n      });\n      const productinBasket = await res.json();\n      dispatch({\n        type: \"addproduct/inbasket/fulfilled\",\n        payload: {\n          productinBasket,\n          productLeft,\n          id\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: \"addproduct/inbasket/rejected\",\n        error: error\n      });\n    }\n  };\n};\nexport const deleteProductFromBasket = id => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: \"deleteproduct/frombasket/pending\"\n    });\n    const state = getState();\n\n    try {\n      await fetch(`http://localhost:4000/deleteProductFromBasket/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`\n        }\n      });\n      dispatch({\n        type: \"deleteproduct/frombasket/fulfilled\",\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: \"deleteproduct/frombasket/fulfilled\",\n        error: error\n      });\n    }\n  };\n};\nexport const addAmountProductinBasket = id => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    dispatch({\n      type: \"addamount/productinbasket/pending\"\n    });\n\n    try {\n      await fetch(`http://localhost:4000/addAmountProductinBasket/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`\n        }\n      });\n      dispatch({\n        type: \"addamount/productinbasket/fulfilled\",\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: \"addamount/productinbasket/rejected\",\n        error: error\n      });\n    }\n  };\n};\nexport const removeAmountProductinBasket = id => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    dispatch({\n      type: \"removeamount/productinbasket/pending\"\n    });\n\n    try {\n      await fetch(`http://localhost:4000/removeAmountProductinBasket/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`\n        }\n      });\n      dispatch({\n        type: \"removeamount/productinbasket/fulfilled\",\n        payload: id\n      });\n    } catch (error) {\n      dispatch({\n        type: \"removeamount/productinbasket/rejected\",\n        error: error\n      });\n    }\n  };\n};\nexport default basket;","map":{"version":3,"sources":["/Users/islam/intocode/newProductSait/frontForProductSait/my-app/src/redux/features/basket.js"],"names":["inittialState","basket","products","error","state","action","type","geting","adding","id","payload","productinBasket","_id","categoryId","product","productLeft","find","left","amount","deleting","filter","addingAmout","map","removeAmout","getAllProductsInBasket","dispatch","res","fetch","json","addProductInBasket","getState","method","headers","Authorization","application","token","deleteProductFromBasket","addAmountProductinBasket","removeAmountProductinBasket"],"mappings":"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","sourcesContent":["const inittialState = {\n  basket: [\n    // { id, categoryId, amount },\n    // { id, categoryId, amount },\n  ],\n  products: [],\n  error: null,\n};\n\nconst basket = (state = inittialState, action) => {\n  switch (action.type) {\n    case \"get/basket/pending\":\n      return {\n        ...state,\n        geting: true,\n        error: null,\n      };\n    case \"get/basket/fulfilled\":\n      return {\n        ...state,\n        geting: false,\n        basket: [...state.basket],\n      };\n    case \"get/basket/rejected\":\n      return {\n        ...state,\n        geting: false,\n        error: action.error,\n      };\n    case \"addproduct/inbasket/pending\":\n      return {\n        ...state,\n        adding: true,\n        error: null,\n      };\n    case \"addproduct/inbasket/fulfilled\":\n      const id = action.payload.productinBasket._id;\n      const categoryId = action.payload.productinBasket.categoryId;\n      const product = {\n        ...action.payload.productLeft.find(\n          (product) => product._id === action.payload.id\n        ),\n      };\n      product.left--;\n      return {\n        ...state,\n        adding: false,\n        basket: [...state.basket, { id, categoryId, amount: 1 }],\n        products: [...state.products, product],\n      };\n    case \"addproduct/inbasket/rejected\":\n      return {\n        ...state,\n        adding: false,\n        error: action.error,\n      };\n    case \"deleteproduct/frombasket/pending\":\n      return {\n        ...state,\n        deleting: true,\n        error: null,\n      };\n    case \"deleteproduct/inbasket/fulfilled\":\n      return {\n        ...state,\n        deleting: false,\n        basket: [\n          ...state.basket.filter((product) => product._id !== action.payload),\n        ],\n      };\n    case \"deleteproduct/inbasket/rejected\":\n      return {\n        ...state,\n        deleting: false,\n        error: action.error,\n      };\n    case \"addamount/productinbasket/pending\":\n      return {\n        ...state,\n        addingAmout: true,\n        error: null,\n      };\n    case \"addamount/productinbasket/\":\n      return {\n        ...state,\n        addingAmout: false,\n        basket: [\n          ...state.basket.map((product) => {\n            if (product.id === action.payload) {\n              product.amount++;\n            }\n            return product;\n          }),\n        ],\n        products: [\n          ...state.products.map((product) => {\n            if (product._id === action.payload) {\n              product.left--;\n            }\n          }),\n        ],\n      };\n    case \"addamount/productinbasket/rejected\":\n      return {\n        ...state,\n        addingAmout: false,\n        error: action.error,\n      };\n    case \"removeamount/productinbasket/pending\":\n      return {\n        ...state,\n        removeAmout: true,\n        error: null,\n      };\n    case \"removeamount/productinbasket/\":\n      return {\n        ...state,\n        removeAmout: false,\n        basket: [\n          ...state.basket.map((product) => {\n            if (product.id === action.payload) {\n              product.amount--;\n            }\n            return product;\n          }),\n        ],\n        products: [\n          ...state.products.map((product) => {\n            if (product._id === action.payload) {\n              product.left++;\n            }\n          }),\n        ],\n      };\n    case \"removeamount/productinbasket/rejected\":\n      return {\n        ...state,\n        removeAmout: false,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const getAllProductsInBasket = () => {\n  return async (dispatch) => {\n    dispatch({ type: \"get/basket/pending\" });\n    try {\n      const res = await fetch(\"http://localhost:4000/basket\");\n      const basket = await res.json();\n      dispatch({ type: \"get/basket/fulfilled\", payload: basket });\n    } catch (error) {\n      dispatch({ type: \"get/basket/rejected\", error: error });\n    }\n  };\n};\n\nexport const addProductInBasket = (id) => {\n  return async (dispatch, getState) => {\n    dispatch({ type: \"addproduct/inbasket/pending\" });\n    const state = getState();\n    const productLeft = state.products.products;\n    try {\n      const res = await fetch(\n        `http://localhost:4000/addproductinbasket/${id}`,\n        {\n          method: \"PATCH\",\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${state.application.token}`,\n          },\n        }\n      );\n      const productinBasket = await res.json();\n      dispatch({\n        type: \"addproduct/inbasket/fulfilled\",\n        payload: {\n          productinBasket,\n          productLeft,\n          id,\n        },\n      });\n    } catch (error) {\n      dispatch({ type: \"addproduct/inbasket/rejected\", error: error });\n    }\n  };\n};\n\nexport const deleteProductFromBasket = (id) => {\n  return async (dispatch, getState) => {\n    dispatch({ type: \"deleteproduct/frombasket/pending\" });\n    const state = getState();\n    try {\n      await fetch(`http://localhost:4000/deleteProductFromBasket/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`,\n        },\n      });\n      dispatch({ type: \"deleteproduct/frombasket/fulfilled\", payload: id });\n    } catch (error) {\n      dispatch({ type: \"deleteproduct/frombasket/fulfilled\", error: error });\n    }\n  };\n};\n\nexport const addAmountProductinBasket = (id) => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    dispatch({ type: \"addamount/productinbasket/pending\" });\n    try {\n      await fetch(`http://localhost:4000/addAmountProductinBasket/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`,\n        },\n      });\n\n      dispatch({\n        type: \"addamount/productinbasket/fulfilled\",\n        payload: id,\n      });\n    } catch (error) {\n      dispatch({ type: \"addamount/productinbasket/rejected\", error: error });\n    }\n  };\n};\n\nexport const removeAmountProductinBasket = (id) => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    dispatch({ type: \"removeamount/productinbasket/pending\" });\n    try {\n      await fetch(`http://localhost:4000/removeAmountProductinBasket/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`,\n        },\n      });\n      dispatch({ type: \"removeamount/productinbasket/fulfilled\", payload: id });\n    } catch (error) {\n      dispatch({ type: \"removeamount/productinbasket/rejected\", error: error });\n    }\n  };\n};\n\nexport default basket;\n"]},"metadata":{},"sourceType":"module"}