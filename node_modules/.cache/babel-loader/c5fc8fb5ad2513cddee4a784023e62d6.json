{"ast":null,"code":"const initialState = {\n  error: null,\n  cash: 0,\n  login: \"\",\n  token: localStorage.getItem(\"token\"),\n  role: \"\",\n  message: \"\"\n};\n\nconst application = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"getUser/data/pending\":\n      return { ...state,\n        loadingUser: true\n      };\n\n    case \"getUser/data/fulfilled\":\n      return { ...state,\n        cash: action.payload.userData.cash,\n        login: action.payload.userData.login,\n        token: action.payload.token,\n        role: action.payload.userData.role,\n        messageLogIn: `Вы вошли как ${action.payload.userData.login}`\n      };\n\n    case \"application/signup/pending\":\n      return { ...state,\n        signing: true,\n        error: null\n      };\n\n    case \"application/signup/fulfilled\":\n      return { ...state,\n        signing: false,\n        message: \"вы успешно зарегистрированы\",\n        role: action.payload\n      };\n\n    case \"application/signup/rejected\":\n      return { ...state,\n        signing: false,\n        error: action.error\n      };\n\n    case \"application/signin/pending\":\n      return { ...state,\n        signing: true,\n        error: null\n      };\n\n    case \"application/signin/fulfilled\":\n      console.log(action.payload.cash);\n      return { ...state,\n        login: action.payload.login,\n        cash: action.payload.cash,\n        signing: false,\n        token: action.payload.token,\n        role: action.payload.role,\n        messageLogin: `Вы вошли как ${action.payload.login}`\n      };\n\n    case \"application/signin/rejected\":\n      return { ...state,\n        signing: false,\n        error: action.error\n      };\n\n    case \"application/signout/pending\":\n      return { ...state,\n        signing: true,\n        error: null\n      };\n\n    case \"application/signout/fulfilled\":\n      return { ...state,\n        signing: false,\n        token: null,\n        role: null,\n        message: \"Войдите или зарегистрируйтесь\"\n      };\n\n    case \"application/signout/rejected\":\n      return { ...state,\n        signing: false,\n        error: action.error\n      };\n\n    case \"cash/user/pending\":\n      return { ...state,\n        cashing: true,\n        error: null\n      };\n\n    case \"cash/user/fulfilled\":\n      return { ...state,\n        cash: action.payload.resultCash,\n        cashing: false,\n        messageCash: `Кошелек успешно пополнен на ${action.payload.sumCash}`\n      };\n\n    case \"cash/user/rejected\":\n      return { ...state,\n        cashing: false,\n        error: action.error\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const getUserData = () => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: \"getUser/data/pending\"\n    });\n    const state = getState();\n\n    try {\n      const res = await fetch(\"http://localhost:4000/oneUser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`\n        }\n      });\n      const userData = await res.json();\n      console.log();\n      dispatch({\n        type: \"getUser/data/fulfilled\",\n        payload: {\n          userData,\n          token: state.application.token\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: \"getUser/data/rejected\",\n        error: error\n      });\n    }\n  };\n};\nexport const signUpFetch = (login, password) => {\n  return async dispatch => {\n    dispatch({\n      type: \"application/signup/pending\"\n    });\n\n    try {\n      await fetch(\"http://localhost:4000/createUser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          login,\n          password\n        })\n      });\n      dispatch({\n        type: \"application/signup/fulfilled\"\n      });\n    } catch (error) {\n      dispatch({\n        type: \"application/signup/rejected\",\n        error: error.toString()\n      });\n    }\n  };\n};\nexport const signInFetch = (login, password) => {\n  return async dispatch => {\n    dispatch({\n      type: \"application/signin/pending\"\n    });\n\n    try {\n      const res = await fetch(\"http://localhost:4000/loginUser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          login,\n          password\n        })\n      });\n      const userData = await res.json();\n      let role;\n      console.log(userData);\n\n      if (userData.error) {\n        dispatch({\n          type: \"application/signin/rejected\",\n          error: userData.error\n        });\n      } else {\n        if (login === \"admin\") {\n          role = login;\n        } else {\n          role = \"user\";\n        }\n      }\n\n      dispatch({\n        type: \"application/signin/fulfilled\",\n        payload: {\n          login,\n          token: userData.token,\n          role,\n          cash: userData.cash\n        }\n      });\n      localStorage.setItem(\"token\", userData.token);\n    } catch (error) {\n      dispatch({\n        type: \"application/signin/rejected\",\n        error: error.toString()\n      });\n    }\n  };\n};\nexport const addCashIn = (login, sumCash) => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    dispatch({\n      type: \"cash/user/pending\"\n    });\n\n    try {\n      const res = await fetch(`http://localhost:4000/cashIn`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`\n        },\n        body: JSON.stringify({\n          login,\n          cash: sumCash\n        })\n      });\n      const resultCash = await res.json();\n      console.log(resultCash);\n      dispatch({\n        type: \"cash/user/fulfilled\",\n        payload: {\n          resultCash,\n          sumCash\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: \"cash/user/rejected\",\n        error: error\n      });\n    }\n  };\n};\nexport const removeCash = finallySum => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    const newCash = state.application.cash - finallySum;\n    dispatch({\n      type: \"remove/cash/pending\"\n    });\n  };\n};\nexport const signOut = () => {\n  return async dispatch => {\n    dispatch({\n      type: \"application/signout/pending\"\n    });\n\n    try {\n      dispatch({\n        type: \"application/signout/fulfilled\"\n      });\n      localStorage.removeItem(\"role\");\n      localStorage.removeItem(\"token\");\n    } catch (error) {\n      dispatch({\n        type: \"application/signout/rejected\"\n      });\n    }\n  };\n};\nexport default application;","map":{"version":3,"sources":["/Users/islam/intocode/newProductSait/frontForProductSait/my-app/src/redux/features/application.js"],"names":["initialState","error","cash","login","token","localStorage","getItem","role","message","application","state","action","type","loadingUser","payload","userData","messageLogIn","signing","console","log","messageLogin","cashing","resultCash","messageCash","sumCash","getUserData","dispatch","getState","res","fetch","method","headers","Authorization","json","signUpFetch","password","body","JSON","stringify","toString","signInFetch","setItem","addCashIn","removeCash","finallySum","newCash","signOut","removeItem"],"mappings":"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","sourcesContent":["const initialState = {\n  error: null,\n  cash: 0,\n  login: \"\",\n  token: localStorage.getItem(\"token\"),\n  role: \"\",\n  message: \"\",\n};\n\nconst application = (state = initialState, action) => {\n  switch (action.type) {\n    case \"getUser/data/pending\":\n      return {\n        ...state,\n        loadingUser: true,\n      };\n    case \"getUser/data/fulfilled\":\n      return {\n        ...state,\n        cash: action.payload.userData.cash,\n        login: action.payload.userData.login,\n        token: action.payload.token,\n        role: action.payload.userData.role,\n        messageLogIn: `Вы вошли как ${action.payload.userData.login}`,\n      };\n    case \"application/signup/pending\":\n      return {\n        ...state,\n        signing: true,\n        error: null,\n      };\n\n    case \"application/signup/fulfilled\":\n      return {\n        ...state,\n        signing: false,\n        message: \"вы успешно зарегистрированы\",\n        role: action.payload,\n      };\n    case \"application/signup/rejected\":\n      return {\n        ...state,\n        signing: false,\n        error: action.error,\n      };\n    case \"application/signin/pending\":\n      return {\n        ...state,\n        signing: true,\n        error: null,\n      };\n    case \"application/signin/fulfilled\":\n      console.log(action.payload.cash);\n      return {\n        ...state,\n        login: action.payload.login,\n        cash: action.payload.cash,\n        signing: false,\n        token: action.payload.token,\n        role: action.payload.role,\n        messageLogin: `Вы вошли как ${action.payload.login}`,\n      };\n    case \"application/signin/rejected\":\n      return {\n        ...state,\n        signing: false,\n        error: action.error,\n      };\n    case \"application/signout/pending\":\n      return {\n        ...state,\n        signing: true,\n        error: null,\n      };\n    case \"application/signout/fulfilled\":\n      return {\n        ...state,\n        signing: false,\n        token: null,\n        role: null,\n        message: \"Войдите или зарегистрируйтесь\",\n      };\n    case \"application/signout/rejected\":\n      return {\n        ...state,\n        signing: false,\n        error: action.error,\n      };\n    case \"cash/user/pending\":\n      return {\n        ...state,\n        cashing: true,\n        error: null,\n      };\n    case \"cash/user/fulfilled\":\n      return {\n        ...state,\n        cash: action.payload.resultCash,\n        cashing: false,\n        messageCash: `Кошелек успешно пополнен на ${action.payload.sumCash}`,\n      };\n    case \"cash/user/rejected\":\n      return {\n        ...state,\n        cashing: false,\n        error: action.error,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const getUserData = () => {\n  return async (dispatch, getState) => {\n    dispatch({ type: \"getUser/data/pending\" });\n    const state = getState();\n    try {\n      const res = await fetch(\"http://localhost:4000/oneUser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`,\n        },\n      });\n      const userData = await res.json();\n      console.log();\n      dispatch({\n        type: \"getUser/data/fulfilled\",\n        payload: {\n          userData,\n          token: state.application.token,\n        },\n      });\n    } catch (error) {\n      dispatch({ type: \"getUser/data/rejected\", error: error });\n    }\n  };\n};\n\nexport const signUpFetch = (login, password) => {\n  return async (dispatch) => {\n    dispatch({ type: \"application/signup/pending\" });\n    try {\n      await fetch(\"http://localhost:4000/createUser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify({ login, password }),\n      });\n      dispatch({\n        type: \"application/signup/fulfilled\",\n      });\n    } catch (error) {\n      dispatch({\n        type: \"application/signup/rejected\",\n        error: error.toString(),\n      });\n    }\n  };\n};\n\nexport const signInFetch = (login, password) => {\n  return async (dispatch) => {\n    dispatch({ type: \"application/signin/pending\" });\n    try {\n      const res = await fetch(\"http://localhost:4000/loginUser\", {\n        method: \"POST\",\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n        body: JSON.stringify({ login, password }),\n      });\n      const userData = await res.json();\n      let role;\n      console.log(userData);\n      if (userData.error) {\n        dispatch({\n          type: \"application/signin/rejected\",\n          error: userData.error,\n        });\n      } else {\n        if (login === \"admin\") {\n          role = login;\n        } else {\n          role = \"user\";\n        }\n      }\n      dispatch({\n        type: \"application/signin/fulfilled\",\n        payload: {\n          login,\n          token: userData.token,\n          role,\n          cash: userData.cash,\n        },\n      });\n\n      localStorage.setItem(\"token\", userData.token);\n    } catch (error) {\n      dispatch({\n        type: \"application/signin/rejected\",\n        error: error.toString(),\n      });\n    }\n  };\n};\nexport const addCashIn = (login, sumCash) => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    dispatch({ type: \"cash/user/pending\" });\n    try {\n      const res = await fetch(`http://localhost:4000/cashIn`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${state.application.token}`,\n        },\n        body: JSON.stringify({ login, cash: sumCash }),\n      });\n      const resultCash = await res.json();\n      console.log(resultCash);\n      dispatch({\n        type: \"cash/user/fulfilled\",\n        payload: {\n          resultCash,\n          sumCash,\n        },\n      });\n    } catch (error) {\n      dispatch({ type: \"cash/user/rejected\", error: error });\n    }\n  };\n};\n\nexport const removeCash = (finallySum) => {\n  return async (dispatch, getState) => {\n    const state = getState();\n    const newCash = state.application.cash - finallySum;\n    dispatch({ type: \"remove/cash/pending\" });\n  };\n};\n\nexport const signOut = () => {\n  return async (dispatch) => {\n    dispatch({ type: \"application/signout/pending\" });\n    try {\n      dispatch({ type: \"application/signout/fulfilled\" });\n      localStorage.removeItem(\"role\");\n      localStorage.removeItem(\"token\");\n    } catch (error) {\n      dispatch({ type: \"application/signout/rejected\" });\n    }\n  };\n};\n\nexport default application;\n"]},"metadata":{},"sourceType":"module"}